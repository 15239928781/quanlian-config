spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 200MB #是单个文件大�?
      max-request-size: 200MB #是设置总上传的数据大小
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    #type: com.mysql.jdbc.Driver
    driver-class-name: com.mysql.cj.jdbc.Driver
    #&useSSL=false&serverTimezone=Asia/Shanghai
    #driverClassName: com.mysql.jdbc.Driver
    druid:
      # 主库数据�?
      master:
        url: jdbc:mysql://119.45.158.174:3306/quanlian?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
        username: quanlian
        password: 123456
      # 从库数据�?
      salve:
        url: jdbc:mysql://119.45.158.174:3306/quanlian?allowMultiQueries=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
        username: quanlian
        password: 123456

      # 初始连接�?
      initial-size: 5
      # 最大连接池数量
      max-active: 20
      # 最小连接池数量
      min-idle: 10
      # 配置获取连接等待超时的时�?
      max-wait: 60000
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 配置一个连接在池中最大生存的时间，单位是毫秒
      max-evictable-idle-time-millis: 900000
      #Oracle需要打开注释 配置检测连接是否有�?
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        login-username:
        login-password:
      filter:
        stat:
          enabled: true
          log-slow-sql: true
          slow-sql-millis: 1000
          merge-sql: false
        wall:
          config:
            multi-statement-allow: true
  redis:
    host: 127.0.0.1 # Redis服务器地址
    database: 0 # Redis数据库索引（默认�?�?
    port: 6379 # Redis服务器连接端�?
    password: # Redis服务器连接密码（默认为空�?
    jedis:
      pool:
        max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
        max-wait: -1ms # 连接池最大阻塞等待时间（使用负值表示没有限制）
        max-idle: 8 # 连接池中的最大空闲连�?
        min-idle: 0 # 连接池中的最小空闲连�?
    timeout: 10000ms # 连接超时时间（毫秒）
storage:
  # 当前工作的对象存储模式，分别是local、aliyun、tencent、qiniu
  active: local
  # 本地对象存储配置信息
  local:
    #storagePath: C:\uploadsssss
    storagePath: /mnt/sdc/www/server/testLeYouAfter/resou
    # 这个地方应该是wx模块的WxStorageController的fetch方法对应的地址 119.3.190.255
    #imageaddress: http://localhost:9001/sys/gameresource/showPic?fileName=
    #apkaddress: http://localhost:9001/sys/gameresource/downLoad?fileName=
    #mvaddress: http://localhost:9001/sys/gameresource/getVideos?fileName2=
    imageaddress: http://119.3.190.255:9001/sys/gameresource/showPic?fileName=
    apkaddress: http://119.3.190.255:9001/sys/gameresource/downLoad?fileName=
    mvaddress: http://119.3.190.255:9001/sys/gameresource/getVideos?fileName2=
#mybatis
mybatis-plus:
  mapper-locations: classpath*:/sys/**/*.xml
  #实体扫描，多个package用逗号或者分号分�?
  typeAliasesPackage: cn.harry.*
  global-config:
    #数据库相关配�?
    db-config:
      #主键类型  AUTO:"数据库ID自增", INPUT:"用户输入ID", ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
      id-type: AUTO
      #id-type: ID_WORKER
      #字段策略 IGNORED:"忽略判断",NOT_NULL:"�?NULL 判断"),NOT_EMPTY:"非空判断"
      field-strategy: NOT_NULL
      #驼峰下划线转�?
      column-underline: true
      logic-delete-value: 1 # 逻辑已删除�?默认�?1)
      logic-not-delete-value: 0 # 逻辑未删除�?默认�?0)
    banner: false
  #原生配置
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    call-setters-on-nulls: true
    jdbc-type-for-null: 'null'
    #log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
jwt:
  tokenHeader: Authorization #JWT存储的请求头

  #tokenHeader: Admin-Token
  secret: www.tech-harry.cn #JWT加解密使用的密钥
  expiration: 604800 #JWT的超期限时间(60*60*24)
  tokenHead: Bearer  #JWT负载中拿到开�?

harry:
  sms:
    accessKeyId: XXX
    accessKeySecret: XXX
    enabled: false  #如果active为false�?则不发送短�?
  redis:
    # 是否打开redis缓存
    open: true
    #redis有效时长�?天，单位�?
    expire: 300

aliyun:
  oss:
    endpoint: oss-cn-shenzhen.aliyuncs.com # oss对外服务的访问域�?
    accessKeyId: accessKeyId # 访问身份验证中用到用户标�?
    accessKeySecret: accessKeySecret # 用户用于加密签名字符串和oss用来验证签名字符串的密钥
    bucketName: bucketName # oss的存储空�?
    policyExpire: 300 # 签名有效�?S)
    maxSize: 10 # 上传文件大小(M)
    callback: http://img.tech-harry.cn/aliyun/oss/callback # 文件上传成功后的回调地址
    dirPrefix: harry/images/ # 上传文件夹路径前缀
security:
  basic:
    enabled: false
# 日志配置
logging:
  level:
    root: info
    #    org.springframework.data.mongodb.core: debug
    cn.harry: debug
file:
  upload:
    path1: http://119.45.158.174:9006/fileupload/
